// Generated by CoffeeScript 1.4.0
(function() {
  var GmetricWrapper, gmetriclib,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  gmetriclib = require('gmetric');

  /**
   * Gmetric wrapper
  */


  GmetricWrapper = (function() {

    function GmetricWrapper() {
      this.value_type = __bind(this.value_type, this);
      this.slope = __bind(this.slope, this);      this.valid_counter_types = ['gauge, counter, derive, absolute'];
    }

    GmetricWrapper.prototype.slope = function(name) {
      var value_lookup;
      value_lookup = {
        '0': "zero",
        none: "zero",
        zero: "zero",
        positive: "positive",
        '1': "positive",
        negative: "negative",
        '-1': "negative",
        both: "both"
      };
      name = value_lookup[name.toString().toLowerCase()];
      if (name === void 0) {
        name = "unspecified";
      }
      return gmetriclib["SLOPE_" + (name.toUpperCase())];
    };

    GmetricWrapper.prototype.value_type = function(name) {
      var value_lookup;
      value_lookup = {
        string: "string",
        ushrt: "unsigned_short",
        ushort: "unsigned_short",
        unsigned_short: "unsigned_short",
        short: "short",
        shrt: "shrt",
        uint: "unsigned_int",
        int: "int",
        float: "float",
        double: "double"
      };
      name = value_lookup[name.toString().toLowerCase()];
      if (name === void 0) {
        name = "unknown";
      }
      return gmetriclib["VALUE_" + (name.toUpperCase())];
    };

    return GmetricWrapper;

  })();

  module.exports = GmetricWrapper;

}).call(this);
